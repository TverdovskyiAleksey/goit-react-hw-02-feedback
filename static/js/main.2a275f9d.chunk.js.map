{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Feedbackoptions/FeedbackOptions.module.css","Components/Notification/Notification.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/Statistics/Statistics.js","Components/Feedbackoptions/FeedbackOptions.js","Components/Notification/Notification.js","Components/Section/Section.js","Components/Container/Container.js","Components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","FeedbackOptions","options","onLeaveFeedback","map","option","btn","type","onClick","charAt","toUpperCase","slice","prototype","PropTypes","func","isRequired","Notification","message","notification","Section","title","children","section","Container","App","state","feedback","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,WAAa,iC,sBCA/BD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,gKC0BfC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,+BACE,qBAAIC,UAAWC,IAAOC,WAAtB,kBAAwCP,KACxC,qBAAIK,UAAWC,IAAOC,WAAtB,qBAA2CN,KAC3C,qBAAII,UAAWC,IAAOC,WAAtB,iBAAuCL,KACvC,qBAAIG,UAAWC,IAAOC,WAAtB,mBAAyCJ,KACzC,qBAAIE,UAAWC,IAAOC,WAAtB,+BACqBH,EADrB,a,gCCRFI,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEP,UAAWC,IAAOO,IAElBC,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,EAAOI,OAAO,GAAGC,cAAgBL,EAAOM,MAAM,IAJ1CN,SAUbJ,EAAgBW,UAAY,CAC1BnB,KAAMoB,IAAUC,KAAKC,WACrBrB,QAASmB,IAAUC,KAAKC,WACxBpB,IAAKkB,IAAUC,KAAKC,YAGPd,Q,iBCbAe,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAInB,UAAWC,IAAOmB,aAAtB,SAAqCD,K,iBCWxBE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASvB,UAAWC,IAAOuB,QAA3B,UACE,6BAAKF,IACJC,M,iBCKUE,EARG,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAChB,qBAAKvB,UAAWC,IAAOwB,UAAvB,SAAmCF,KCkDtBG,E,4MA9CbC,MAAQ,CACNhC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPQ,gBAAkB,SAAAuB,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,4CAItC,WACE,MAA+BG,KAAKJ,MAA5BhC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEjBmC,EAAqBrC,EAAOE,EAAMD,EAClCqC,EAAkCC,KAAKC,MAC1CxC,EAAOqC,EAAsB,KAE1B5B,EAAUgC,OAAOC,KAAKN,KAAKJ,OAEjC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAASA,EACTC,gBAAiB0B,KAAK1B,oBAG1B,cAAC,EAAD,CAASiB,MAAM,aAAf,SACGU,EACC,cAAC,EAAD,CACErC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkC,EACPjC,mBAAoBkC,IAGtB,cAAC,EAAD,CAAcd,QAAQ,+B,GAvChBmB,a,YCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a275f9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__vlQsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2uFZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1acfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1pQh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3fwQ_\"};","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li className={styles.statistics}>Good:{good}</li>\r\n        <li className={styles.statistics}>Neutral:{neutral}</li>\r\n        <li className={styles.statistics}>Bad:{bad}</li>\r\n        <li className={styles.statistics}>Total:{total}</li>\r\n        <li className={styles.statistics}>\r\n          Positive feedback:{positivePercentage}%\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {options.map(option => (\r\n      <button\r\n        className={styles.btn}\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option.charAt(0).toUpperCase() + option.slice(1)}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.prototype = {\r\n  good: PropTypes.func.isRequired,\r\n  neutral: PropTypes.func.isRequired,\r\n  bad: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <h3 className={styles.notification}>{message}</h3>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './Feedbackoptions';\r\nimport Notification from './Notification';\r\nimport Section from './Section';\r\nimport Container from './Container';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  onLeaveFeedback = feedback => {\r\n    this.setState(prevState => ({\r\n      [feedback]: prevState[feedback] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const countTotalFeedback = good + bad + neutral;\r\n    const countPositiveFeedbackPercentage = Math.round(\r\n      (good / countTotalFeedback) * 100,\r\n    );\r\n    const options = Object.keys(this.state);\r\n\r\n    return (\r\n      <Container>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback}\r\n              positivePercentage={countPositiveFeedbackPercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}